{"version":3,"sources":["types/conditionFilter.ts","services/Store.tsx","hooks/useLocalStorage.ts","components/TodoCard/TodoCard.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["ConditionFilter","TodosContext","React","createContext","selectedTodoId","setSelectedTodoId","todos","setTodos","displayTodoModal","setDisplayTodoModal","loading","setLoading","titleFilter","setTitleFilter","conditionFilter","All","setConditionFilter","filteredTodos","TodosProvider","children","key","startValue","useState","data","localStorage","getItem","JSON","parse","e","removeItem","value","setValue","newValue","setItem","stringify","useLocalStorage","filter","todo","title","toLocaleLowerCase","includes","filtering","Completed","completed","Active","finalFiltering","useMemo","Provider","TodoCard","id","useContext","className","cn","type","onClick","TodoList","map","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","length","Loader","TodoModal","selectedTodo","user","href","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","selectedUser","setSelectedUser","find","useEffect","userId","response","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60420edd.chunk.js","sourcesContent":["export enum ConditionFilter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useMemo, useState } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { Todo } from '../types/Todo';\nimport { ConditionFilter } from '../types/conditionFilter';\n\ntype TodosContextProps = {\n  selectedTodoId: number,\n  setSelectedTodoId: (selectedId: number) => void,\n  todos: Todo[],\n  setTodos: (newValue: Todo[]) => void,\n  displayTodoModal: boolean,\n  setDisplayTodoModal: (displayModal: boolean) => void,\n  loading: boolean,\n  setLoading: (loader: boolean) => void,\n  titleFilter: string,\n  setTitleFilter: (value: string) => void,\n  conditionFilter: ConditionFilter\n  setConditionFilter: (filter: ConditionFilter) => void,\n  filteredTodos: Todo[];\n};\n\nexport const TodosContext = React.createContext<TodosContextProps>({\n  selectedTodoId: 0,\n  setSelectedTodoId: () => {},\n  todos: [],\n  setTodos: () => [],\n  displayTodoModal: false,\n  setDisplayTodoModal: () => {},\n  loading: false,\n  setLoading: () => {},\n  titleFilter: '',\n  setTitleFilter: () => {},\n  conditionFilter: ConditionFilter.All,\n  setConditionFilter: () => {},\n  filteredTodos: [],\n});\n\ntype Props = {\n  children: React.ReactNode,\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useLocalStorage<Todo[]>('todos', []);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [displayTodoModal, setDisplayTodoModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [titleFilter, setTitleFilter] = useState('');\n  const [conditionFilter, setConditionFilter] = useState(ConditionFilter.All);\n\n  let filteredTodos = todos.filter(todo => todo.title\n    .toLocaleLowerCase().includes(titleFilter));\n\n  function finalFiltering() {\n    let filtering = filteredTodos;\n\n    switch (conditionFilter) {\n      case ConditionFilter.Completed:\n        filtering = filteredTodos.filter(todo => todo.completed);\n        break;\n      case ConditionFilter.Active:\n        filtering = filteredTodos.filter(todo => !todo.completed);\n        break;\n      default:\n        filtering = filteredTodos;\n    }\n\n    return filtering;\n  }\n\n  filteredTodos = finalFiltering();\n\n  const value = useMemo(() => ({\n    selectedTodoId,\n    setSelectedTodoId,\n    todos,\n    setTodos,\n    displayTodoModal,\n    setDisplayTodoModal,\n    loading,\n    setLoading,\n    titleFilter,\n    setTitleFilter,\n    conditionFilter,\n    setConditionFilter,\n    filteredTodos,\n\n  }), [selectedTodoId,\n    todos,\n    displayTodoModal,\n    loading,\n    titleFilter,\n    conditionFilter,\n    filteredTodos,\n    setTodos,\n  ]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import { useState } from 'react';\n\nexport function useLocalStorage<T>(key: string, startValue: T): [T,\n  (newValue: T) => void] {\n  const [value, setValue] = useState(() => {\n    const data = localStorage.getItem(key);\n\n    if (data === null) {\n      return startValue;\n    }\n\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      localStorage.removeItem(key);\n\n      return startValue;\n    }\n  });\n\n  const set = (newValue: T) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, set];\n}\n","import cn from 'classnames';\nimport { useContext } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../../services/Store';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoCard: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n  } = todo;\n\n  const {\n    selectedTodoId,\n    setSelectedTodoId,\n    setDisplayTodoModal,\n    setLoading,\n  } = useContext(TodosContext);\n\n  const eyeCickHandler = () => {\n    setSelectedTodoId(id);\n    setDisplayTodoModal(true);\n    setLoading(true);\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({ 'has-background-info-light': id % 2 === 0 })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed\n          ? (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )\n          : (\n            <span className=\"is-vcentered\" />\n          )}\n      </td>\n      <td className=\"is-vcentered\">\n        {todo.completed\n          ? (\n            <p className=\"has-text-success\">{title}</p>\n          )\n          : <p className=\"has-text-danger\">{title}</p>}\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={eyeCickHandler}\n        >\n          <span className=\"icon\">\n            {selectedTodoId === todo.id\n              ? <i className=\"far fa-eye-slash\" />\n              : <i className=\"far fa-eye\" />}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoCard } from '../TodoCard/TodoCard';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => <TodoCard todo={todo} key={todo.id} />)}\n    </tbody>\n\n  </table>\n);\n","import { useContext } from 'react';\nimport { TodosContext } from '../../services/Store';\nimport { ConditionFilter } from '../../types/conditionFilter';\n\nexport const TodoFilter = () => {\n  const {\n    titleFilter,\n    setTitleFilter,\n    setConditionFilter,\n  } = useContext(TodosContext);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleFilter(event.target.value.toLocaleLowerCase());\n  };\n\n  const changeFilterOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setConditionFilter(value as ConditionFilter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={changeFilterOption}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={titleFilter}\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {titleFilter.length > 0 && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setTitleFilter('')}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { TodosContext } from '../../services/Store';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  user: User | null,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, user }) => {\n  const {\n    loading,\n    setLoading,\n    setDisplayTodoModal,\n    setSelectedTodoId,\n  } = useContext(TodosContext);\n\n  const {\n    title,\n    id,\n    completed,\n  } = selectedTodo;\n\n  const crossInModalHandler = () => {\n    setLoading(false);\n    setDisplayTodoModal(false);\n    setSelectedTodoId(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={crossInModalHandler}\n            />\n\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {\n                  user\n                    ? user.name\n                    : '******'\n                }\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodosContext } from './services/Store';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const {\n    todos,\n    setTodos,\n    selectedTodoId,\n    displayTodoModal,\n    loading,\n    setLoading,\n    titleFilter,\n    filteredTodos,\n  } = useContext(TodosContext);\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId);\n\n  useEffect(() => {\n    getTodos()\n      .then((response) => setTodos(response))\n      .finally(() => setLoading(false));\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then((response) => {\n          setSelectedUser(response);\n        });\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loading, titleFilter, selectedTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && !displayTodoModal\n                ? (\n                  <Loader />\n                )\n                : (\n                  <TodoList todos={filteredTodos} />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        displayTodoModal && selectedTodo && (\n          <TodoModal selectedTodo={selectedTodo} user={selectedUser} />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './services/Store';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}